# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required


env:
  global:
    - CRATE_NAME=transfer

matrix:
  include:
    # Linux
    - env: TARGET=i686-unknown-linux-gnu
    #- env: TARGET=i686-unknown-linux-musl
    #- env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    #- env: TARGET=i686-apple-darwin
    #  os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    #- env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    ## Other architectures
    #- env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=mips-unknown-linux-gnu
    #- env: TARGET=mips64-unknown-linux-gnuabi64
    #- env: TARGET=mips64el-unknown-linux-gnuabi64
    #- env: TARGET=mipsel-unknown-linux-gnu
    #- env: TARGET=powerpc-unknown-linux-gnu
    #- env: TARGET=powerpc64-unknown-linux-gnu
    #- env: TARGET=powerpc64le-unknown-linux-gnu
    #- env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    ## Testing other channels
    #- env: TARGET=x86_64-unknown-linux-gnu
    #  rust: nightly
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx
    #  rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "f9ihRIuOqzXtFsIb1U0CxBSXc5QLLrG61E1YDApIiUuP3l77SKA8TPEWH+srcSnyO39hBzgvY0vGfyFNSn7dxqkXUr+J9MzBcsfq+jYBopGfNnvjDIQ754XiqKgPnB7yIVfUcqYYqofxx16y9vMFNK0g3lMCG1CIbPdrha0rPhKejiHkDxGupLsUb3nHBCjcchAYjDvENOkB1c9oK6mgwOFK5uFhKRkmIpZDbhJJn5Ix2vnrFQlMinlx3oTsnfxwEkzaAr0pShn/DXgSuVyokzHShQHgcEeLSi6mMUKZnCAfG/cQEzh+fTkVaVAownH+kT6tSUk5C1YzeHbSque8Vc/qVNGzrdJGhUtaAcr3JunIzFqwKQRzZdSaTIkmFy/CUvytwgJbY8VWSy7CXE6mglnvW8UrYT2JVxGLIkHfOphXaWCV7k9s3pXZIlYXBji5qPoBgwUiQeonHDjfh/dvNqYc8SYzgrqoKomqRLDF1lIu/BCrmre7IiHepAAnxNJ+nT3D1b0YwWyiCTMuHFJj5Czj9xtSKKdcy18wqZtFbRvcuSVzhMYqtuwYBM50xWA1FomtISQGcpCDrGCGzhRXpj61WHSPx44xjocMccVdWsnv9hLSl6V2pLByISTmZZ2G/0vrQ+jff/CGrj6IdO+Nau00Qnd+yYwH6oDSurcDx/w="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
